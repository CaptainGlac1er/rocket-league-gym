:py:mod:`rlgym.envs.match`
==========================

.. py:module:: rlgym.envs.match

.. autoapi-nested-parse::

   The Match object.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rlgym.envs.match.Match




.. py:class:: Match(reward_function, terminal_conditions, obs_builder, action_parser, state_setter, team_size=1, tick_skip=8, game_speed=100, gravity=1, boost_consumption=1, spawn_opponents=False)

   Bases: :py:obj:`rlgym.envs.environment.Environment`

   .. py:method:: episode_reset(initial_state: rlgym.utils.gamestates.GameState)


   .. py:method:: build_observations(state) -> Union[Any, List]


   .. py:method:: get_rewards(state, done) -> Union[float, List]


   .. py:method:: is_done(state)


   .. py:method:: get_result(state: rlgym.utils.gamestates.GameState)


   .. py:method:: parse_state(state_str: List[float]) -> rlgym.utils.gamestates.GameState


   .. py:method:: parse_actions(actions: Any, state: rlgym.utils.gamestates.GameState) -> numpy.ndarray


   .. py:method:: format_actions(actions: numpy.ndarray)


   .. py:method:: get_reset_state() -> list


   .. py:method:: get_config()


   .. py:method:: update_settings(game_speed=None, gravity=None, boost_consumption=None)


   .. py:method:: _auto_detect_obs_space()



