:py:mod:`rlgym.utils.gamestates.physics_object`
===============================================

.. py:module:: rlgym.utils.gamestates.physics_object

.. autoapi-nested-parse::

   A class to represent the state of a physics object from the game.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rlgym.utils.gamestates.physics_object.PhysicsObject




.. py:class:: PhysicsObject(position=None, quaternion=None, linear_velocity=None, angular_velocity=None)

   Bases: :py:obj:`object`

   .. py:method:: decode_car_data(car_data: numpy.ndarray)

      Function to decode the physics state of a car from the game state array.
      :param car_data: Slice of game state array containing the car data to decode.


   .. py:method:: decode_ball_data(ball_data: numpy.ndarray)

      Function to decode the physics state of the ball from the game state array.
      :param ball_data: Slice of game state array containing the ball data to decode.


   .. py:method:: forward() -> numpy.ndarray


   .. py:method:: right() -> numpy.ndarray


   .. py:method:: left() -> numpy.ndarray


   .. py:method:: up() -> numpy.ndarray


   .. py:method:: pitch() -> float


   .. py:method:: yaw() -> float


   .. py:method:: roll() -> float


   .. py:method:: euler_angles() -> numpy.ndarray


   .. py:method:: rotation_mtx() -> numpy.ndarray


   .. py:method:: serialize()

      Function to serialize all the values contained by this physics object into a single 1D list. This can be useful
      when constructing observations for a policy.
      :return: List containing the serialized data.



